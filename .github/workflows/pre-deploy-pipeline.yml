name: Pre-Merge Tasks

on:
    push:
      branches:
        - main

jobs: 
    run-test:
        runs-on: ubuntu-latest
        name: Run Unit Tests                    
        services:
            mysql:
                image: mysql:8.0.29
                env:
                    MYSQL_ROOT_HOST: "%"
                    MYSQL_DATABASE: x
                    MYSQL_ROOT_PASSWORD: rpass
                    MYSQL_USER: admin
                    MYSQL_PASSWORD: pass
                ports:
                    - "3306:3306"
                options: >-
                    --health-cmd "mysqladmin ping -ppass"
                    --health-interval 10s
                    --health-start-period 10s
                    --health-timeout 5s
                    --health-retries 10
 
            redis:
                # Docker Hub image
                image: redis
                # Set health checks to wait until redis has started
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    # Maps port 6379 on service container to the host
                    - 6379:6379                    

        steps:
            - uses: actions/checkout@v4
            - run: git fetch --no-tags --prune --depth=1 origin
            - name: Run node 20
              uses: actions/setup-node@v4
              with:
                node-version: 20.10.0
            #   - run: npm config set //npm.pkg.github.com/:_authToken ${{ secrets.PERSONAL_ACCESS_TOKEN }}
            #     id: setup-personal-access-token
                
                
            - run: npm install yarn -g
            - name: Cache node modules
              uses: actions/cache@v4
              with:
                path: node_modules
                key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
                restore-keys: |
                    ${{ runner.os }}-node-
            - run: yarn --frozen-lockfile
            - run: yarn test 
              env:
                # APPLICATION
                NODE_ENV: "test"
                APP_SCHEMA: http
                APP_HOST: localhost
                PORT: 3000
                APP_EXPOSED_PORT: 3000
                
                # LOGGING
                LOG_LEVEL: debug
                LOG_OUTPUT: dev
                
                # MySQL DATABASE
                KNEX_CONNECTION: mysql2
                KNEX_USERNAME: "test_user"
                KNEX_PASSWORD: "test_pass"
                KNEX_HOST: localhost
                KNEX_PORT: 3306
                KNEX_DATABASE: x
                
                # Path Structure
                KNEX_SYNCHRONIZE: false
                KNEX_LOGGING: error
                KNEX_LOGGER: advanced-console
                KNEX_MIGRATIONS: src/database/migrations/mysql/**/*.ts
                KNEX_MIGRATIONS_DIR: src/database/migrations/mysql
                KNEX_ENTITIES: src/api/models/mysql/**/*.ts
                KNEX_ENTITIES_DIR: src/api/models/mysql
                KNEX_DISABLED: false

                # Redis
                REDIS_CLUSTER_IP: localhost
                REDIS_PORT: 6379
                REDIS_USER: x
                REDIS_PASSWORD: x
                
                # Swagger
                SWAGGER_ENABLED: true
                SWAGGER_ROUTE: /swagger
                SWAGGER_FILE: api/swagger.json
                SWAGGER_STATS_ROUTE: /swagger-stats/ui



            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v4.0.1
              with:
                token: ${{ secrets.CODECOV_TOKEN }}
